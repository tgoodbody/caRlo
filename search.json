[{"path":"https://tgoodbody.github.io/caRlo/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 caRlo authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://tgoodbody.github.io/caRlo/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tristan R.H. Goodbody. Author, maintainer.","code":""},{"path":"https://tgoodbody.github.io/caRlo/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Goodbody T (2023). caRlo: Ger GEDI data compare ALS. R package version 0.0.1, https://tgoodbody.github.io/caRlo/.","code":"@Manual{,   title = {caRlo: Ger GEDI data and compare to ALS},   author = {Tristan R.H. Goodbody},   year = {2023},   note = {R package version 0.0.1},   url = {https://tgoodbody.github.io/caRlo/}, }"},{"path":"https://tgoodbody.github.io/caRlo/index.html","id":"carlo","dir":"","previous_headings":"","what":"caRlo","title":"caRlo","text":"goal caRlo create simple way implement Monte Carlo bootstrapping approaches. package following: monte_carlo() - Use Monte Carlo sampling create large number samples population. stats_nested() - samples, calculate statistic interest (e.g. mean, median, variance). bootstrap_stats() - Use bootstrapping set sample statistics estimate distribution statistic interest entire population. stats_plot() - Visualize statistical outputs","code":""},{"path":"https://tgoodbody.github.io/caRlo/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"caRlo","text":"install caRlo GitHub:","code":"# install.packages(\"devtools\") devtools::install_github(\"tgoodbody/caRlo\")"},{"path":"https://tgoodbody.github.io/caRlo/index.html","id":"bootstrapping","dir":"","previous_headings":"Overview","what":"Bootstrapping","title":"caRlo","text":"Monte Carlo bootstrapping involves creating large number random samples population using Monte Carlo sampling, applying bootstrapping set sample statistics estimate distribution statistic interest entire population. first step Monte Carlo bootstrapping generate large number random samples population using Monte Carlo sampling. example, interested estimating mean height vegetation, generate large number random samples height data lidar data acts population using Monte Carlo sampling.","code":""},{"path":"https://tgoodbody.github.io/caRlo/index.html","id":"sample-statistics","dir":"","previous_headings":"Overview","what":"Sample statistics","title":"caRlo","text":"Next, calculate mean vegetation height random samples. gives set sample statistics representing mean income random samples.can use bootstrapping estimate distribution mean vegetation height entire population based sample statistics.","code":""},{"path":"https://tgoodbody.github.io/caRlo/index.html","id":"bootstrap-statistics","dir":"","previous_headings":"Overview","what":"Bootstrap statistics","title":"caRlo","text":"estimate distribution mean vegetation height, randomly select subset sample statistics (replacement) create new “bootstrap sample”. , calculate mean (statistic choosing) bootstrap sample, repeat process many times generate large number bootstrap means. bootstrap means can used estimate distribution mean vegetation height entire population, taking account variability sample means. combining Monte Carlo sampling bootstrapping way, can get accurate estimate statistic interest better sense variability. can particularly useful situations limited data need make predictions uncertain outcomes.","code":""},{"path":"https://tgoodbody.github.io/caRlo/index.html","id":"monte-carlo-sampling-for-forest-inventory","dir":"","previous_headings":"","what":"Monte Carlo sampling for forest inventory","title":"caRlo","text":"Lets assume want estimate average height trees landscape. Luckily, wall--wall lidar data forest, remote sensing technology uses laser pulses measure distance sensor ground surface, vegetation, objects. analyzing lidar data, can estimate height trees forest. : Choose lidar metrics want sample . vegetation height logical choice lidar metric like p99 (99th percentile height). Choose sampling method (e.g. simple random sampling, latin hypercube sampling etc.). can choose multiple compare estimates height !. Perform repeated sampling determined sample size (nSamp caRlo) discrete number iterations (iter). Steps 1-3 performed using monte_carlo() function. samples selected need : Calculate average p99 metric sample. Bootstrap p99 average estimate distribution average tree height entire forest. bootstrapping, random subsets sample averages (replacement) used create new “bootstrap sample”. , calculate mean bootstrap sample ( average averages :) ), repeat process many times generate large number bootstrap means. bootstrap means can used estimate distribution average tree height entire forest, taking account variability sample means.","code":""},{"path":"https://tgoodbody.github.io/caRlo/index.html","id":"sample-size-optimization","dir":"","previous_headings":"Monte Carlo sampling for forest inventory","what":"Sample size optimization","title":"caRlo","text":"Now, let’s assume want estimate average height trees using increasingly larger sample sizes. can repeat process described different sample sizes, ranging small samples large samples. start monte carlo sample approach 50 nSamp = 50, iter = 100. repeat process larger sample sizes, nSamp = c(50, 100, 200, 400, 800). Calculating bootstrapped statistics samples give us good sense estimated average tree height changes sample size increases. using Monte Carlo sampling bootstrapping different sample sizes, can estimate variability average tree height sample size, determine many locations need sample order get reliable estimate true average tree height entire forest. can useful information forest management conservation planning, can help us improved estimation methods track changes forest health time.","code":""},{"path":"https://tgoodbody.github.io/caRlo/index.html","id":"example","dir":"","previous_headings":"Monte Carlo sampling for forest inventory","what":"Example","title":"caRlo","text":"","code":"#--- code in parallel ---# cores <- 5 # number of cores to use for processing  #--- population mean and median ---# population <-  data.frame(sd = 6.2, mean = 18.7)  #--- define parameters ---# data <- caRlo:::plots # internal test data with 1000 plots nSamp <- c(50, 100, 150) # Sample sizes for monte carlo simulations iter <- 10 # number of monte carlo simulations per sample size  #--- sample - generate stats - bootstrap stats ---# samples <- monte_carlo(data = data, nSamp = nSamp, iter = tier, cores = cores)  #--- calculate statistics from monte carlo samples ---# stats <- stats_nested(data = samples, cores = cores)  #--- plot stats from monte carlo samples with standard error ribbons for all metrics ---# stats_plot(data = stats, type = \"mean\", scales = \"free\")  #--- bootstrap statistics of monte carlo samples ---# bootstraps <- bootstrap_stats(data = stats, population = population, cores = cores)  #--- plot stats from monte carlo samples with standard error ribbons for all metrics ---# bootstrap_plot(data = bootstraps, bootstat = \"mean\", scales = \"free\")"},{"path":"https://tgoodbody.github.io/caRlo/index.html","id":"specify-user-defined-functions-for-statistics-using-f","dir":"","previous_headings":"","what":"Specify user defined functions for statistics using .f","title":"caRlo","text":"caRlo allows users define statistics wish calculate monte carlo samples. provides flexibility user wants compare.","code":"#--- function needs to have more than 1 metric to give proper outputs ---# .f <- function(x) {   #--- calculate the mean and percent of points less than the mean ---#   c(     mean = mean(x),     perc_gr_mean = length(x[x < mean(x)]) / length(x)   ) }  s <- stats_nested(data = caRlo:::samples, cores = cores, .f = .f)  s$statistics[[1]] #> # A tibble: 6 × 3 #>   statistic    name  value #>   <chr>        <chr> <dbl> #> 1 mean         zmean  8.92 #> 2 mean         zq90  17.9  #> 3 mean         lai    2.30 #> 4 perc_gr_mean zmean  0.52 #> 5 perc_gr_mean zq90   0.46 #> 6 perc_gr_mean lai    0.52"},{"path":"https://tgoodbody.github.io/caRlo/index.html","id":"visualze","dir":"","previous_headings":"","what":"Visualze","title":"caRlo","text":"","code":"#--- population mean and median ---# population <-  data.frame(sd = 1.1, mean = 2.2)  #--- bootstrap statistics of monte carlo samples ---# bootstraps <- bootstrap_stats(data = caRlo:::stats, population = population, cores = 5)  #--- plot bootstrap means of monte carlo samples with standard error ribbons for all metrics ---# bootstrap_plot(data = bootstraps,bootstat = \"mean\", type = \"mean\", scales = \"free\")"},{"path":"https://tgoodbody.github.io/caRlo/reference/ahelsmethod.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample ahels using the 'sample_ahels' function from the sgsR package. — ahelsmethod","title":"Sample ahels using the 'sample_ahels' function from the sgsR package. — ahelsmethod","text":"Sample ahels using 'sample_ahels' function sgsR package.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/ahelsmethod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample ahels using the 'sample_ahels' function from the sgsR package. — ahelsmethod","text":"","code":"ahelsmethod(existing, nFrac, mraster, matrices, ...)"},{"path":"https://tgoodbody.github.io/caRlo/reference/ahelsmethod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample ahels using the 'sample_ahels' function from the sgsR package. — ahelsmethod","text":"existing data frame existing samples nFrac Scalar use define number samples add using ahels mraster raster object acting population matrices Population maxtrix ... arguments passed ahelsmethod function.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/ahelsmethod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample ahels using the 'sample_ahels' function from the sgsR package. — ahelsmethod","text":"dataframe containing sampled ahels.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/apply_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample a data frame using different methods — apply_methods","title":"Sample a data frame using different methods — apply_methods","text":"function takes data frame performs sampling using three different methods: latin hypercube sampling (LHS), simple random sampling (SRS), Latin pseudo-maximum sampling (LPM).","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/apply_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample a data frame using different methods — apply_methods","text":"","code":"apply_methods(data, nSamp, iter, method = NULL, cores = NULL, ...)"},{"path":"https://tgoodbody.github.io/caRlo/reference/apply_methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample a data frame using different methods — apply_methods","text":"data data frame sampled. nSamp number samples generate. iter number iterations perform. method method use sampling. Can \"clhs\" Latin Hypercube Sampling, \"balanced\" else Balanced Sampling, \"srs\" Simple Random Sampling, \"strat\" stratified sampling. method = \"strat\", data must attribute named strata cores Number cores use parallel computation ... arguments pass sgsR:sample_ahels{sgsR::sample_ahels()}","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/apply_methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample a data frame using different methods — apply_methods","text":"data frame containing sampled data using three methods.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/apply_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Sampling Methods to Data — apply_sample","title":"Apply Sampling Methods to Data — apply_sample","text":"function applies one three sampling methods data: Latin Hypercube Sampling (LHS), Simple Random Sampling (SRS), Latin Point Mass Sampling (LPM).","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/apply_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Sampling Methods to Data — apply_sample","text":"","code":"apply_sample(nSamp, iter, method, data, ...)"},{"path":"https://tgoodbody.github.io/caRlo/reference/apply_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Sampling Methods to Data — apply_sample","text":"nSamp number samples generate. iter number iterations perform. method method use sampling. Can \"clhs\" Latin Hypercube Sampling, \"balanced\" else Balanced Sampling, \"srs\" Simple Random Sampling, \"strat\" stratified sampling. method = \"strat\", data must attribute named strata data data frame sampled. ... arguments pass sgsR:sample_ahels{sgsR::sample_ahels()}","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/apply_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Sampling Methods to Data — apply_sample","text":"data frame containing sampled data, iteration number, number samples, sampling method used.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/apply_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate descriptive statistics for each column in a data frame — apply_stats","title":"Calculate descriptive statistics for each column in a data frame — apply_stats","text":"Given data frame, calculates standard error, minimum, mean, maximum, variance, interquartile range (IQR), decile quantiles column.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/apply_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate descriptive statistics for each column in a data frame — apply_stats","text":"","code":"apply_stats(data, population = FALSE, .f = NULL)"},{"path":"https://tgoodbody.github.io/caRlo/reference/apply_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate descriptive statistics for each column in a data frame — apply_stats","text":"data data frame numeric columns calculate statistics . population Logical defining whether metrics population. population = FALSE standard error calculated. .f User-defined function single parameters. See stdstats() example syntax.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/apply_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate descriptive statistics for each column in a data frame — apply_stats","text":"data frame columns calculated statistic, row represents column input data frame.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/boot_diffmean.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrapped difference from population mean — boot_diffmean","title":"Bootstrapped difference from population mean — boot_diffmean","text":"function computes difference mean given sample population mean using bootstrapping.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/boot_diffmean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrapped difference from population mean — boot_diffmean","text":"","code":"boot_diffmean(x, i, pop)"},{"path":"https://tgoodbody.github.io/caRlo/reference/boot_diffmean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrapped difference from population mean — boot_diffmean","text":"x vector numerical values. vector indices specifying current bootstrap sample. pop population mean compare .","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/boot_diffmean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrapped difference from population mean — boot_diffmean","text":"difference mean current bootstrap sample population mean.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/boot_diffmedian.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrapped difference from population median — boot_diffmedian","title":"Bootstrapped difference from population median — boot_diffmedian","text":"function computes difference median given sample population median using bootstrapping.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/boot_diffmedian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrapped difference from population median — boot_diffmedian","text":"","code":"boot_diffmedian(x, i, pop)"},{"path":"https://tgoodbody.github.io/caRlo/reference/boot_diffmedian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrapped difference from population median — boot_diffmedian","text":"x vector numerical values. vector indices specifying current bootstrap sample. pop population median compare .","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/boot_diffmedian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrapped difference from population median — boot_diffmedian","text":"difference median current bootstrap sample population median.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/boot_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrapped mean — boot_mean","title":"Bootstrapped mean — boot_mean","text":"function computes bootstrapped mean given sample.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/boot_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrapped mean — boot_mean","text":"","code":"boot_mean(x, i)"},{"path":"https://tgoodbody.github.io/caRlo/reference/boot_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrapped mean — boot_mean","text":"x vector numerical values. vector indices specifying current bootstrap sample.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/boot_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrapped mean — boot_mean","text":"bootstrapped mean sample.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/boot_median.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrapped median — boot_median","title":"Bootstrapped median — boot_median","text":"function computes bootstrapped median given sample.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/boot_median.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrapped median — boot_median","text":"","code":"boot_median(x, i)"},{"path":"https://tgoodbody.github.io/caRlo/reference/boot_median.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrapped median — boot_median","text":"x vector numerical values. vector indices specifying current bootstrap sample.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/boot_median.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrapped median — boot_median","text":"bootstrapped median sample.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/bootstrap_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot bootstrap statistics — bootstrap_plot","title":"Plot bootstrap statistics — bootstrap_plot","text":"function creates plot bootstrapped statistics using ggplot2.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/bootstrap_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot bootstrap statistics — bootstrap_plot","text":"","code":"bootstrap_plot(data, statistics = NULL, bootstat = NULL, type = \"mean\", ...)"},{"path":"https://tgoodbody.github.io/caRlo/reference/bootstrap_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot bootstrap statistics — bootstrap_plot","text":"data data frame containing data plotted. statistics optional vector statistics include plot. bootstat optional vector bootstrapped statistics include plot. type type plot create, either \"mean\" (default) \"box\". ... Additional arguments passed ggplot2.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/bootstrap_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot bootstrap statistics — bootstrap_plot","text":"ggplot2 object representing plot summary statistics.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/bootstrap_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample bootstrap function — bootstrap_stats","title":"Sample bootstrap function — bootstrap_stats","text":"function performs bootstrapping nested dataframe nested column called statistics.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/bootstrap_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample bootstrap function — bootstrap_stats","text":"","code":"bootstrap_stats(data, population, cores = NULL, R = 10000)"},{"path":"https://tgoodbody.github.io/caRlo/reference/bootstrap_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample bootstrap function — bootstrap_stats","text":"data nested dataframe nested column called statistics. population vector representing population bootstrap samples drawn. cores optional argument indicating number CPU cores use parallel computation. NULL, function runs bootstrap sequentially. R number bootstrap resamples generate.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/bootstrap_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample bootstrap function — bootstrap_stats","text":"nested dataframe additional column bootstrap containing bootstrapped results.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/monte_carlo.html","id":null,"dir":"Reference","previous_headings":"","what":"Iterate over multiple sampling methods and sample sizes — monte_carlo","title":"Iterate over multiple sampling methods and sample sizes — monte_carlo","text":"Iterate multiple sampling methods sample sizes","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/monte_carlo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Iterate over multiple sampling methods and sample sizes — monte_carlo","text":"","code":"monte_carlo(   data,   metrics = NULL,   nSamp,   iter,   method = NULL,   cores = NULL,   ... )"},{"path":"https://tgoodbody.github.io/caRlo/reference/monte_carlo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Iterate over multiple sampling methods and sample sizes — monte_carlo","text":"data sf type POINT metrics vector character strings match desired column names data nSamp numeric scalar greater 0 less number rows data iter numeric scalar greater 0 method method use sampling. Can \"clhs\" Latin Hypercube Sampling, \"balanced\" else Balanced Sampling, \"srs\" Simple Random Sampling, \"strat\" stratified sampling. method = \"strat\", data must attribute named strata cores Number cores use parallel computation ... parameters pass sgsR::sample_ahelssample_ahels","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/monte_carlo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Iterate over multiple sampling methods and sample sizes — monte_carlo","text":"list sampled datasets","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/monte_carlo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Iterate over multiple sampling methods and sample sizes — monte_carlo","text":"function iterates multiple sampling methods sample sizes using utils_sample(). function assumes users removed coordinate columns data.frame provided. NA values data dropped.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/monte_carlo_ahels.html","id":null,"dir":"Reference","previous_headings":"","what":"This function performs a Monte Carlo simulation of the ahels\nmethod. — monte_carlo_ahels","title":"This function performs a Monte Carlo simulation of the ahels\nmethod. — monte_carlo_ahels","text":"function performs Monte Carlo simulation ahels method.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/monte_carlo_ahels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function performs a Monte Carlo simulation of the ahels\nmethod. — monte_carlo_ahels","text":"","code":"monte_carlo_ahels(   existing,   mraster,   nFrac = 0.1,   matrices = NULL,   cores = NULL,   ... )"},{"path":"https://tgoodbody.github.io/caRlo/reference/monte_carlo_ahels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function performs a Monte Carlo simulation of the ahels\nmethod. — monte_carlo_ahels","text":"existing data frame existing samples mraster raster object acting population nFrac Scalar use define number samples add using ahels matrices Population maxtrix cores number cores use parallel calculation. ... arguments passed ahelsmethod function.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/monte_carlo_ahels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function performs a Monte Carlo simulation of the ahels\nmethod. — monte_carlo_ahels","text":"nested dataframe ahels samples.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/stats_nested.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate nested summary statistics — stats_nested","title":"Calculate nested summary statistics — stats_nested","text":"function takes data frame creates nested data frame grouping columns nSamp, iter, method. calculates summary statistics nested data frame using stats_summary function.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/stats_nested.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate nested summary statistics — stats_nested","text":"","code":"stats_nested(data, metrics = NULL, cores = NULL, .f = NULL)"},{"path":"https://tgoodbody.github.io/caRlo/reference/stats_nested.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate nested summary statistics — stats_nested","text":"data data frame containing data summarized metrics vector metric names summarized. NULL, numeric columns summarized. cores Number cores use parallel computation .f Single parameter statistical function applied","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/stats_nested.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate nested summary statistics — stats_nested","text":"tibble containing nested data frames corresponding summary statistics.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/stats_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot summary statistics — stats_plot","title":"Plot summary statistics — stats_plot","text":"function creates plot summary statistics using ggplot2.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/stats_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot summary statistics — stats_plot","text":"","code":"stats_plot(data, population = NULL, statistics = NULL, type = \"mean\", ...)"},{"path":"https://tgoodbody.github.io/caRlo/reference/stats_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot summary statistics — stats_plot","text":"data data frame containing data plotted. population output stats_summary(population = TRUE). Represents population parameters. Functions used calculate statistics must resonable output. statistics optional vector statistics include plot. type type plot create, either \"mean\" (default) \"box\". ... Additional arguments passed ggplot2.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/stats_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot summary statistics — stats_plot","text":"ggplot2 object representing plot summary statistics.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/stats_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Summary Statistics — stats_summary","title":"Compute Summary Statistics — stats_summary","text":"function computes summary statistics numeric columns SpatRaster data.frame. vector metric names specified, computes summary statistics columns. Rows NA values dropped.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/stats_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Summary Statistics — stats_summary","text":"","code":"stats_summary(data, metrics = NULL, population = FALSE, .f = NULL)"},{"path":"https://tgoodbody.github.io/caRlo/reference/stats_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Summary Statistics — stats_summary","text":"data data frame containing data summarized metrics vector metric names summarized. NULL, numeric columns summarized. population logical indicating whether summary statistics calculated population just sample. Default FALSE. .f Single parameter statistical function applied","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/stats_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Summary Statistics — stats_summary","text":"tibble object containing computed summary statistics.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/stdboot.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard summary — stdboot","title":"Standard summary — stdboot","text":"Standard summary","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/stdboot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard summary — stdboot","text":"","code":"stdboot(x, R = 10000)"},{"path":"https://tgoodbody.github.io/caRlo/reference/stdboot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standard summary — stdboot","text":"x numeric vector summary statistics computed. R Number bootstrap iterations population dataframe population statistics","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/stdmethods.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Sampling Method to Data — stdmethods","title":"Apply Sampling Method to Data — stdmethods","text":"function applies one three sampling methods data: Latin Hypercube Sampling (LHS), Simple Random Sampling (SRS), Latin Point Mass Sampling (LPM).","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/stdmethods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Sampling Method to Data — stdmethods","text":"","code":"stdmethods(data, nSamp, iter, method, ...)"},{"path":"https://tgoodbody.github.io/caRlo/reference/stdmethods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Sampling Method to Data — stdmethods","text":"data data frame sampled. nSamp number samples generate. iter number iterations perform. method method use sampling. Can \"clhs\" Latin Hypercube Sampling, \"balanced\" else Balanced Sampling, \"srs\" Simple Random Sampling, \"strat\" stratified sampling. method = \"strat\", data must attribute named strata ... arguments pass sgsR:sample_ahels{sgsR::sample_ahels()}","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/stdmethods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Sampling Method to Data — stdmethods","text":"data frame containing sampled data, iteration number, number samples, sampling method used.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/stdstats.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute summary statistics for a numeric vector — stdstats","title":"Compute summary statistics for a numeric vector — stdstats","text":"function computes standard summary statistics numeric vector, including minimum, mean, maximum, variance, interquartile range (IQR), quantiles 10% intervals 10% 90%.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/stdstats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute summary statistics for a numeric vector — stdstats","text":"","code":"stdstats(x)"},{"path":"https://tgoodbody.github.io/caRlo/reference/stdstats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute summary statistics for a numeric vector — stdstats","text":"x numeric vector summary statistics computed.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/stdstats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute summary statistics for a numeric vector — stdstats","text":"named numeric vector following components: min minimum value x mean mean value x max maximum value x var variance x IQR interquartile range x 10% 10th percentile x 20% 20th percentile x 30% 30th percentile x 40% 40th percentile x 50% 50th percentile (median) x 60% 60th percentile x 70% 70th percentile x 80% 80th percentile x 90% 90th percentile x","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/utils_list_to_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a vector by repeating values from a list — utils_list_to_vector","title":"Create a vector by repeating values from a list — utils_list_to_vector","text":"function takes list values repeats value specified number times create vector.","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/utils_list_to_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a vector by repeating values from a list — utils_list_to_vector","text":"","code":"utils_list_to_vector(nSamp, iter)"},{"path":"https://tgoodbody.github.io/caRlo/reference/utils_list_to_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a vector by repeating values from a list — utils_list_to_vector","text":"nSamp Vector desired sample sizes iter Desired number iterations","code":""},{"path":"https://tgoodbody.github.io/caRlo/reference/utils_list_to_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a vector by repeating values from a list — utils_list_to_vector","text":"vector nSamp length iter","code":""}]
